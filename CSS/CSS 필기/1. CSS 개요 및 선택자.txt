@ CSS 란
-> Cascading Style Sheets 의 약자
-> 웹 문서의 전반적인 스타일을 미리 저장해 둔 스타일 시트
-> 기존 HTML은 다양하게 설계하고 수시로 변경하는데 많은 제약이 따름
	이를 보완하기 위해 만들어진 것이 스타일 시트
-> 문서 작성 내용과 꾸미는 부분을 분리하여 내용을 수정하여도 디자인을 바꿀
	필요가 없고, 디자인을 수정해도 글 내용을 바꿀 필요가 없어지게 만듦


스타일 시트 기본형식

ex)
<style>
p{ text-align : center;}
</style>
p		: 선택자
text-align	: stlye 속성
center		: 속성 값

* CSS 에서 가장 중요한 것은 선택자! 선택자를 잘 쓸 줄 알아야지만
	Front 개발자 입장에서 변경하고자 하는 것을 선택할 수 있음. 


@ 내부 스타일 시트
-> <style> </style> 를 사용하여 내부에 스타일 정보를 저장하는 기법
-> 내부에 스타일 시트를 정의하고 사용 하게 됨( 해당 페이지에서 계속 사용)

ex) 
<style>
	p{text-align : center;}
</style>

@ 외부 스타일 시트
-> <link> 태그를 이용하여 css파일을 읽어와 스타일을 적용
-> 외부에서 가져온 것이기 때문에 다른 페이지에서도 호출해서 사용가능

ex)
<link href="css파일경로" rel="stylesheet" type="text/css">

@ 인라인 스타일 시트
-> 태그 내부에 스타일 정보를 지정하는 방법
-> 해당 내부 태그에 정의 한 것이기 때문에 해당 태그에만 적용

ex)
<html>
	<p style="color:pink"> 인사인 스타일 시트 적용 </p>
</html>


@ CSS 선택자
-> CSS 에서는 선택자를 잘 쓰는 것이 CSS를 잘하게 되는 것 중 하나!

선택자의 종류

전체 선택자 : * 

태그 선택자 : 태그(h1, p, li 등등..)

아이디 선택자 : #아이디 명

클래스 선택자 : .클래스명

후손 선택자   : 선택자 선택자

자손 선택자   : 선택자> 선택자

속성 선택자	:선택자[속성= 값]/선택자[속성~=값]
		 선택자[속성|=값]/선택자[속성^=값]
		 선택자[속성$=값]/선택자[속성*=값]

동위 선택자 	: 선택자 + 선택자 /  선택자 ~ 선택자

수조 선택자 	:선택자 : first-child / 선택자 : last-child
		 선택자 : nth-child(수열) / 선택자 : nth-last-child(수열)
		 선택자 : first-oftype / 선택자 : last-of-type
		 선택자 : nth-of-type(수열) / 선택자 : nth-last-of-type(수열)

반응 선택자  	: 선택자:active / 선택자:hover

상태 선택자 	: :checked / :focus

속성 선택자	: :enabled / :disabled

링크 선택자 	: :link / :visited

문자 선택자 	: ::first-letter  / ::first-line
		  ::after / ::before / ::selection

부정 선택자	: 선택자:not(선택자) 

@ 전체 선택자
-> html 문서 안에 있는 모든 태그에 적용되는 스타일 선택자

기본 형식
* { 설정내용;}

* 전체 태그는 body 태그에 있는 요소뿐만 아니라 html, head에도 적용이 됨

ex) *{color : red;} 

<head>
	<style>
    	*{color: red;}
	</style>
</head>
    <body>
    <p >내용1</p>
    <span >내용2</span><br>
    <div >내용3</div>
    <h4>내용4</h4>

    </body>
</html>


@ 태그 선택자
-> 특정 태그에만 적용되는 스타일 선택자

기본형식

태그면 { 설정내용 ;}
* 여러개의 태그를 선택시에는 ','(쉼표)로 구별하여 작성

ex) p{color : red;}


@ 아이디 / 클래스 선택자
-> 아이디 선택자 : 태그 속성 id 를 설정하고 id 값을 선택자로 쓰는것(#)
-> 클래스 선택자 : 태그 속성 class 를 설정하고 class값을 선택자로 하는것(.)

기본형식

id : # 아이디명{설정내용;}
class : .클래스명{설정내용;}

* 클래스 선택자는 주옥을 허용하고 id 선택자는 중복 허용을 하지 않음
코드상에서는 에러는 없지만 javascript의 DOM에서 id값으로 페이지 요소를
가져오기 때문에 중복을 허용하지 않음

* 클래스 중복을 허용하기 때문에 영역을 명확하게 하기 위해
태그 선택자와 같이 쓰는 경우도 있음.

<!--    3가지 값(구분자)
   name : 다른 페이지로 값을 넘길때 사용하는 구분자
   id   : 태그들 끼리 구분하기 위한 구분자
   class: 그룹으로 묶어서 구분하기 위한 구분자.
   -->

<style>
    #p1{color : aqua;}
    #p2{color : blue;}
    #p3{color : greenyellow;}
    .pclass{background-color: red;}
</style>
</head>
    <body>
<!--    3가지 값(구분자)
   name : 다른 페이지로 값을 넘길때 사용하는 구분자
   id   : 태그들 끼리 구분하기 위한 구분자
   class: 그룹으로 묶어서 구분하기 위한 구분자.
   -->
    <p id="p1" class="pclass">내용1</p>
    <p id="p2">내용2</p>
    <p id="p3" class="pclass">내용3</p>
    


@ 기본 속성 성택자
-> 태그 선택자와 함께 사용하는 선택자로 뒤에 []를 사용하여 속성과 속성값을 사용

기본형식

선택자 [속성] { 설정내용;}
선택자 [속성=속성값] {설정내용;}

ex1) 선택자 [속성] { 설정내용;}
<style>
    p[name]{color : red;}
    p[id]{color : blue;}
    p[class]{color : green;}
</style>
</head>
    <body>
    <p name="p1"> 내용1</p>
    <p id="p2"> 내용2</p>
    <p class="p3"> 내용3</p>
    </body>
</html>


ex2) 선택자 [속성=속성값] {설정내용;}
<style>
    p[name=p1]{color : red;}
</style>
</head>
    <body>
    <p name="p1"> 내용1</p>
    <p name="p2"> 내용2</p>
    <p class="p3"> 내용3</p>
    </body>
</html>


@ 문자열 속성 선택자
-> 특정 문자열을 확인하여 스타일을 적용하는 방식으로 특별한 경우에만 사용

선택자[속성~=값] : 속성값이 특정 값을 단어로 포함하는 태그 선택(띄어쓰기로 구분)
선택자[속성|=값] : 속성값이 특정 값을 단어로 포함하는 태그 선택( "-"으로 구분
		(- 앞의 내용값이 동일해야함)
	-> name 이든, class이든 선언디 - 로 구성된 것 이어야 함.


















