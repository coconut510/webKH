
@ each 메소드
-> 배열을 관리하는 for in 문과 비슷한 메소드로 객체나 배열의 요소를 검사하는 메소드
-> index : 배열의 순번
-> item : 값을 보관하는 변수(객체) '.' 으로 접근


## $.each(배열이름, function(index,item){}) ##
-> 지정한 배열을 0번부터 자동으로 불러와 순번은 index에 넣고, 값은 item에 넣는 메소드
	* item의 값은 개체
	* item은 html 태그 자체이므로 안의 내용을 가지고 올때는 innerHTML과 같이 자바스크립트 호출문을 써야한다.
	* jQuery 메소드를 사용하기 위해선 item을 jQuery로 선택 해야함
		- $(item)

ex)

$.each(배열(객체)이름, function(index, item){
		
});


ex)

 <script>
      $(document).ready(function(){
          $('#btn').click(function(){
             var object =  $('li');
             $.each(object,function(index,item){
                console.log("index 번호 :  " + index + " /item값 : " + item.innerHTML);//item.eq(index).html());
                 // jQuery로
                 // console.log($(item).html());
             });
          });
      });
  </script>



## $(선택자).each(function(index,item){}); ##
-> 선택자로 선택한 요소를 index 순번으로 요소값을 조작할 때 사용하는 메소드. object 를 따로 넣지 않아도 됨.

ex)
$('선택자').each(function(index,item){
	선택된 요소들을 차례대로 조작
});


ex)
<script>
      $(document).ready(function(){
          $('#btn').click(function(){
            $('li').each(function(index,item){
                console.log(item.innerHTML);
            })  
          });
      });
  </script>

## addClass() 메소드 ##
-> 문서 객체에 class 속성을 추가하는 메소드

ex)

$('선택자').addClass('class명');


## removeClass() 메소드 ##
-> 문서 객체의 class 속성을 제거하는 메소드

ex)
$('선택자').removeClass('class명');


@ 문서 객체의 속성 검사
-> 문서 객체의 속성을 각종 메소드를 통해 검사할 수 있음

## attr() ##
-> 특정 속성의 값 알아내는 메소드
-> html 태그에 부여되어 있는 속성을 알아 낼 수 있음


 <script>
      $(document).ready(function(){
          $('#btn').click(function(){
                console.log($('#img').attr('id'));
                console.log($('#img').attr('src'));
                console.log($('#img').attr('width'));
                console.log($('#img').attr('height'));
          });
      });
  </script>

ex) 속성값 부여

  <script>
      $(document).ready(function(){
          $('#btn').click(function(){
               $('#img').attr('width',600);
               $('#img').attr('height',450);
          });
      });
  </script>

## removeAttr('인자') ##
-> 인자값에 제거하려는 속성 이름을 작성

ex)

  <script>
      $(document).ready(function(){
          $('#btn').click(function(){
               $('#img').removeAttr('src');
          });
      });
  </script>

@ 문서 객체의 CSS 속성 검사 및 추가

## css() 메소드 ##

ex)

$('선택자').css(name);	// css 값 추출
$('선택자').css(name,value); // css 값 추출


@ 문서 객체의 내부 검사
-> 문서 객체의 innerHTML 속성과 관련되 jQuery 메소드

## html() ##
-> 객체 내부의 글자와 관련되 기능 수행 (HTML 태그 조작)
-> 내부 안에 있는 글자의 태그가 있다면 태그까지 가져옴

## text() ##
-> 객체 내부의 글자와 관련 기능 수행
-> 내부에 있는 글자만 가져올때 사용


  <script>
      $(document).ready(function(){
          $('#btn').click(function(){
                console.log($('h1').html());// 태그가 있다면 태그도 포함
                console.log($('h1').text());// 태그가 있어도 글자만!
          });
      });
  </script>
    <style>
        .dotbogi{
            font-size:50px;
            color:red;
        }
    </style>
</head>
    <body>
        <h1><p>안녕</p></h1>
        <button id="btn">돋보기</button>
    </body>
</html>



ex)

 <script>
      $(document).ready(function(){
          $('#btn').click(function(){
              var str = prompt("입력");
              $('div').html(str);// 태그화 되서 처리됨
              $('div').text(str);// 태그도 글자화 되서 처리됨.
          });
      });
  </script>


@ 문서 객체의 제거

## remove() ##
-> 특정 문서 객체를 제거

ex)
 <script>
      $(document).ready(function(){
          $('#btn').click(function(){
              $('p').first().remove();
          });
      });
  </script>


## empty() ##
-> 특정 문서의 후손을 모두 제거함

ex)

<script>
      $(document).ready(function(){
          $('#btn').click(function(){
              $('div').empty();
          });
      });
  </script>
    <style>
        .dotbogi{
            font-size:50px;
            color:red;
        }
    </style>
</head>
    <body>
      <div>
      i'm div
       <p>내용1</p>
       <p>내용2</p>
       <p>내용3</p>
       <p>내용4</p>
       </div>
        <button id="btn">돋보기</button>
    </body>
</html>


## 삽입메소드 part 1##

$(A).appendTo(B)
-> A를 B의 바로 뒷 부분에 추가

$(A).prependTo(B)
-> A를 B의 바로 앞 부분에 추가

$(A).insertAfter(B)
-> A를 B의 뒤에 추가

$(A).insertBefore(B)
-> A를 B의 앞에 추가

ex)

  <script>
      $(document).ready(function(){
          $('#btn1').click(function(){
              $('<span>추가1</span>').appendTo('#p1');
          });
         
          $('#btn2').click(function(){
              $('<span>추가2</span>').prependTo('#p2');
          });
          
          $('#btn3').click(function(){
              $('<span>추가3</span>').insertAfter('#p3');
          });
          
          $('#btn4').click(function(){
              $('<span>추가4</span>').insertBefore('#p4');
          });
      });
  </script>
    <style>
        .dotbogi{
            font-size:50px;
            color:red;
        }
    </style>
</head>
    <body>
       <p id="p1">test1</p>
       <p id="p2">test2</p>
       <p id="p3">test3</p>
       <p id="p4">test4</p>
       <button id="btn1">appendTo</button>
       <button id="btn2">prependTo</button>
       <button id="btn3">insertAfter</button>
       <button id="btn4">insertBefore</button>
    </body>
</html>


## 삽입 메소드 Part2 ##
-> Part1 과 반대의 순서로 진행


## $(A).append(B) ##
->B를 A의 뒷부분에 추가

## $(A).prepend(B) ##
-> B를 A의 앞부분에 추가

## $(A).after(B) ##
-> B를 A의 뒤에 추가

## $(A).before(B) ##
-> B를 A의 앞에 추가

ex)

 
  <script>
      $(document).ready(function(){
          $('#btn1').click(function(){
              $('#p1').append('<span>추가1</span>');
          });
         
          $('#btn2').click(function(){
              $('#p2').prepend('<span>추가2</span>');
          });
          
          $('#btn3').click(function(){
              $('#p3').after('<span>추가3</span>');
          });
          
          $('#btn4').click(function(){
              $('#p4').before('#p4');
          });
      });
  </script>
    <style>
        .dotbogi{
            font-size:50px;
            color:red;
        }
    </style>
</head>
    <body>
       <p id="p1">test1</p>
       <p id="p2">test2</p>
       <p id="p3">test3</p>
       <p id="p4">test4</p>
       <button id="btn1">appendTo</button>
       <button id="btn2">prependTo</button>
       <button id="btn3">insertAfter</button>
       <button id="btn4">insertBefore</button>
    </body>
</html>


## 문서 객체를 이동 ##
-> append 나 appendTo등을 이용하여 문서 객체를 이동

ex)

  <script>
      $(document).ready(function(){
          $('#btn1').click(function(){
              $('#p2').appendTo($('#p3'));
          });
      });
  </script>
    <style>
        .dotbogi{
            font-size:50px;
            color:red;
        }
    </style>
</head>
    <body>
       <p id="p1">test1</p>
       <p id="p2">test2</p>
       <p id="p3">test3</p>
       <p id="p4">test4</p>
       <button id="btn1">appendTo</button>
       <button id="btn2">prependTo</button>
       <button id="btn3">insertAfter</button>
       <button id="btn4">insertBefore</button>
    </body>
</html>

## 문서 객체의 복사 ##
-> clone 메소드를 사용하면 복제가 가능함

ex)

  
    <script>
      $(document).ready(function(){
          $('#btn1').click(function(){
              $('#p1').clone().appendTo('#p4');
          });
      });
  </script>
    <style>
        .dotbogi{
            font-size:50px;
            color:red;
        }
    </style>
</head>
    <body>
       <p id="p1">test1</p>
       <p id="p2">test2</p>
       <p id="p3">test3</p>
       <p id="p4">test4</p>
       <button id="btn1">appendTo</button>
       <button id="btn2">prependTo</button>
       <button id="btn3">insertAfter</button>
       <button id="btn4">insertBefore</button>
    </body>
</html>









































































